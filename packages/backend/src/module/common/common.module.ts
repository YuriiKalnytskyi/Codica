import { Global, Module } from '@nestjs/common';import { ConfigModule, ConfigService } from '@nestjs/config';import { JwtModule } from '@nestjs/jwt';import { ScheduleModule } from '@nestjs/schedule';import { JWTAuthGuard } from './guards';import { TypeOrmModule } from '@nestjs/typeorm';@Global()@Module({  imports: [    ConfigModule.forRoot({      envFilePath: '.env',      isGlobal: true    }),    TypeOrmModule.forRoot({      host: process.env.POSTGRES_HOST,      port: Number(process.env.POSTGRES_PORT_DB),      logging: ['query', 'error'],      type: 'postgres',      entities: ['dist/db/models/**/*.model.{ts,js}'],      migrations: ['dist/db/models/migrations/**/*.{ts,js}'],      subscribers: ['src/db/models/subscriber/**/*.ts'],      database: process.env.POSTGRES_DB,      username: process.env.POSTGRES_USER,      password: process.env.POSTGRES_PASSWORD,      synchronize: true    }),    JwtModule.register({      secret: process.env.JWT_SECRET,      signOptions: { expiresIn: '1d' }    }),    ScheduleModule.forRoot()  ],  providers: [ConfigModule, ConfigService, JWTAuthGuard],  exports: [JwtModule, ConfigModule, ConfigService, JWTAuthGuard, ConfigService]})export class CommonModule {}